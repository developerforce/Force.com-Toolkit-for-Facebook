//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class FacebookPhoto {
	public String id {get;set;}
	public FacebookRef from_z {get;set;}
	public String name {get;set;}
	public String picture {get;set;}
	public String source {get;set;}
	public Integer height {get;set;}
	public Integer width {get;set;}
	public List<Images> images {get;set;}
	public String link {get;set;}
	public String icon {get;set;}
	public String created_time {get;set;}
	public Integer position {get;set;}
	public String updated_time {get;set;}
	public FacebookComments comments {get;set;}
	public FacebookLikes likes {get;set;}
	public String type {get;set;}

	public FacebookPhoto(JSONParser parser) {
		while (parser.nextToken() != JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != JSONToken.VALUE_NULL) {
					if (text == 'id') {
						id = parser.getText();
					} else if (text == 'from') {
						from_z = new FacebookRef(parser);
					} else if (text == 'name') {
						name = parser.getText();
					} else if (text == 'picture') {
						picture = parser.getText();
					} else if (text == 'source') {
						source = parser.getText();
					} else if (text == 'height') {
						height = parser.getIntegerValue();
					} else if (text == 'width') {
						width = parser.getIntegerValue();
					} else if (text == 'images') {
						images = new List<Images>();
						while (parser.nextToken() != JSONToken.END_ARRAY) {
							images.add(new Images(parser));
						}
					} else if (text == 'link') {
						link = parser.getText();
					} else if (text == 'icon') {
						icon = parser.getText();
					} else if (text == 'created_time') {
						created_time = parser.getText();
					} else if (text == 'position') {
						position = parser.getIntegerValue();
					} else if (text == 'updated_time') {
						updated_time = parser.getText();
					} else if (text == 'comments') {
						comments = new FacebookComments(parser);
					} else if (text == 'likes') {
						likes = new FacebookLikes(parser);
					} else if (text == 'type') {
						type = parser.getText();
						if (!type.equals('photo')) {
							throw new FacebookException('FacebookPhoto found object type '+type+' - expected photo');
						}
					} else {
						System.debug(LoggingLevel.WARN, 'FacebookPhoto consuming unrecognized property: '+text);
						FacebookUtil.consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Images {
		public Integer width {get;set;}
		public Integer height {get;set;}
		public String source {get;set;}

		public Images(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'width') {
							width = parser.getIntegerValue();
						} else if (text == 'height') {
							height = parser.getIntegerValue();
						} else if (text == 'source') {
							source = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Images consuming unrecognized property: '+text);
							FacebookUtil.consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public FacebookPhoto(String accessToken, String id, Map<String, String> params) {
		this(System.JSON.createParser(FacebookUtil.get(accessToken, id, params)));
	}
	
	public FacebookPhoto(String accessToken, String id) {
		this(accessToken, id, null);
	}
	
	public static FacebookPhoto parse(String json) {
		return new FacebookPhoto(System.JSON.createParser(json));
	}
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"id\": \"10150146072661729\",'+
		'  \"from\": {'+
		'    \"name\": \"Facebook\",'+
		'    \"category\": \"Product/service\",'+
		'    \"id\": \"20531316728\"'+
		'  },'+
		'  \"name\": \"A Photo\",'+
		'  \"picture\": \"https://fbcdn-photos-a.akamaihd.net/hphotos-ak-snc6/168787_10150146072661729_20531316728_7844094_6153670_s.jpg\",'+
		'  \"source\": \"https://fbcdn-sphotos-a.akamaihd.net/hphotos-ak-snc6/168787_10150146072661729_20531316728_7844094_6153670_n.jpg\",'+
		'  \"height\": 480,'+
		'  \"width\": 720,'+
		'  \"images\": ['+
		'    {'+
		'      \"width\": 720,'+
		'      \"height\": 480,'+
		'      \"source\": \"https://fbcdn-sphotos-a.akamaihd.net/hphotos-ak-snc6/168787_10150146072661729_20531316728_7844094_6153670_n.jpg\"'+
		'    },'+
		'    {'+
		'      \"width\": 180,'+
		'      \"height\": 120,'+
		'      \"source\": \"https://fbcdn-photos-a.akamaihd.net/hphotos-ak-snc6/168787_10150146072661729_20531316728_7844094_6153670_a.jpg\"'+
		'    },'+
		'    {'+
		'      \"width\": 130,'+
		'      \"height\": 86,'+
		'      \"source\": \"https://fbcdn-photos-a.akamaihd.net/hphotos-ak-snc6/168787_10150146072661729_20531316728_7844094_6153670_s.jpg\"'+
		'    },'+
		'    {'+
		'      \"width\": 75,'+
		'      \"height\": 50,'+
		'      \"source\": \"https://fbcdn-photos-a.akamaihd.net/hphotos-ak-snc6/168787_10150146072661729_20531316728_7844094_6153670_t.jpg\"'+
		'    }'+
		'  ],'+
		'  \"link\": \"https://www.facebook.com/photo.php?fbid=10150146072661729&set=a.10150146071791729.324257.20531316728&type=1\",'+
		'  \"icon\": \"https://s-static.ak.facebook.com/rsrc.php/v1/yz/r/StEh3RhPvjk.gif\",'+
		'  \"created_time\": \"2011-02-02T16:49:20+0000\",'+
		'  \"position\": 17,'+
		'  \"updated_time\": \"2011-02-02T17:00:50+0000\",'+
		'  \"comments\": {'+
		'    \"data\": ['+
		'      {'+
		'        \"id\": \"10150146072661729_4508446\",'+
		'        \"from\": {'+
		'          \"name\": \"Nicholas Soon Joon Foon\",'+
		'          \"id\": \"725660814\"'+
		'        },'+
		'        \"message\": \"Huat ah!\",'+
		'        \"created_time\": \"2011-02-02T17:15:58+0000\"'+
		'      },'+
		'      {'+
		'        \"id\": \"10150146072661729_4508447\",'+
		'        \"from\": {'+
		'          \"name\": \"Лука Шикл\",'+
		'          \"id\": \"1719901237\"'+
		'        },'+
		'        \"message\": \"HOT DANG EXTRA\",'+
		'        \"created_time\": \"2011-02-02T17:16:00+0000\",'+
		'        \"likes\": 4'+
		'      }'+
		'    ],'+
		'    \"paging\": {'+
		'      \"next\": \"https://graph.facebook.com/10150146072661729/FacebookComments?method=GET&metadata=true&format=json&callback=___GraphExplorerAsyncCallback___&access_token=AAA&limit=25&offset=25&__after_id=10150146072661729_4508487\"'+
		'    }'+
		'  },'+
		'  \"likes\": {'+
		'    \"data\": ['+
		'      {'+
		'        \"id\": \"100001663729131\",'+
		'        \"name\": \"György Csorba\"'+
		'      },'+
		'      {'+
		'        \"id\": \"100001633568908\",'+
		'        \"name\": \"Алексей Каржавин\"'+
		'      }'+
		'    ],'+
		'    \"paging\": {'+
		'      \"next\": \"https://graph.facebook.com/10150146072661729/likes?method=GET&metadata=true&format=json&callback=___GraphExplorerAsyncCallback___&access_token=AAA&limit=25&offset=25&__after_id=100002291257888\"'+
		'    }'+
		'  },'+
		'  \"type\": \"photo\"'+
		'}';
		FacebookPhoto r = parse(json);
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.from_z != null);
		System.assert(r.picture != null);
		System.assert(r.source != null);
		System.assert(r.height != null);
		System.assert(r.width != null);
		System.assert(r.images != null);
		System.assert(r.link != null);
		System.assert(r.icon != null);
		System.assert(r.created_time != null);
		System.assert(r.position != null);
		System.assert(r.updated_time != null);
		System.assert(r.comments != null);
		System.assert(r.likes != null);
		System.assert(r.type != null);

		FacebookUtil.testmode = true;
		FacebookUtil.teststubresponse = json;
		r = new FacebookPhoto('TEST', 'TEST');
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.from_z != null);
		System.assert(r.picture != null);
		System.assert(r.source != null);
		System.assert(r.height != null);
		System.assert(r.width != null);
		System.assert(r.images != null);
		System.assert(r.link != null);
		System.assert(r.icon != null);
		System.assert(r.created_time != null);
		System.assert(r.position != null);
		System.assert(r.updated_time != null);
		System.assert(r.comments != null);
		System.assert(r.likes != null);
		System.assert(r.type != null);

		json = '{\"type\": \"test\" }';
		try {
			FacebookPhoto objRoot = new FacebookPhoto(System.JSON.createParser(json));
			System.assert(false);
		} catch (FacebookException fbe) {
			System.assertEquals(fbe.getMessage(), 'FacebookPhoto found object type test - expected photo');
		}

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		FacebookPhoto objRoot = new FacebookPhoto(System.JSON.createParser(json));
		System.assert(objRoot != null);
		System.assert(objRoot.id == null);
		System.assert(objRoot.from_z == null);
		System.assert(objRoot.picture == null);
		System.assert(objRoot.source == null);
		System.assert(objRoot.height == null);
		System.assert(objRoot.width == null);
		System.assert(objRoot.images == null);
		System.assert(objRoot.link == null);
		System.assert(objRoot.icon == null);
		System.assert(objRoot.created_time == null);
		System.assert(objRoot.position == null);
		System.assert(objRoot.updated_time == null);
		System.assert(objRoot.comments == null);
		System.assert(objRoot.likes == null);
		System.assert(objRoot.type == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		Images objImages = new Images(System.JSON.createParser(json));
		System.assert(objImages != null);
		System.assert(objImages.width == null);
		System.assert(objImages.height == null);
		System.assert(objImages.source == null);
	}
}