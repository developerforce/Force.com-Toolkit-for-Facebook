//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class FacebookNote {
	public String id {get;set;}
	public FacebookRef from_z {get;set;}
	public String subject {get;set;}
	public String message {get;set;}
	public String icon {get;set;}
	public String created_time {get;set;}
	public String updated_time {get;set;}
	public FacebookComments comments {get;set;}
	public String type {get;set;}

	public FacebookNote(JSONParser parser) {
		while (parser.nextToken() != JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != JSONToken.VALUE_NULL) {
					if (text == 'id') {
						id = parser.getText();
					} else if (text == 'from') {
						from_z = new FacebookRef(parser);
					} else if (text == 'subject') {
						subject = parser.getText();
					} else if (text == 'message') {
						message = parser.getText();
					} else if (text == 'icon') {
						icon = parser.getText();
					} else if (text == 'created_time') {
						created_time = parser.getText();
					} else if (text == 'updated_time') {
						updated_time = parser.getText();
					} else if (text == 'comments') {
						comments = new FacebookComments(parser);
					} else if (text == 'type') {
						type = parser.getText();
						if (!type.equals('note')) {
							throw new FacebookException('FacebookNote found object type '+type+' - expected note');
						}
					} else {
						System.debug(LoggingLevel.WARN, 'FacebookNote consuming unrecognized property: '+text);
						FacebookUtil.consumeObject(parser);
					}
				}
			}
		}
	}
	
	public FacebookNote(String accessToken, String id, Map<String, String> params) {
		this(System.JSON.createParser(FacebookUtil.get(accessToken, id, params)));
	}
	
	public FacebookNote(String accessToken, String id) {
		this(accessToken, id, null);
	}
	
	public static FacebookNote parse(String json) {
		return new FacebookNote(System.JSON.createParser(json));
	}
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"id\": \"122788341354\",'+
		'  \"from\": {'+
		'    \"name\": \"Facebook for iPhone\",'+
		'    \"canvas_name\": \"fbtouch\",'+
		'    \"namespace\": \"fbtouch\",'+
		'    \"id\": \"6628568379\"'+
		'  },'+
		'  \"subject\": \"Facebook for iPhone 3.0\",'+
		'  \"message\": \"<div><span class=\\\"photo_right\\\"><img class=\\\"photo_img img\\\" src=\\\"https://fbcdn-photos-a.akamaihd.net/hphotos-ak-snc1/5650_98675398379_254285_a.jpg\\\" alt=\\\"\\\" /><span class=\\\"caption\\\"></span></span><span class=\\\"photo_right\\\"><img class=\\\"photo_img img\\\" src=\\\"https://fbcdn-photos-a.akamaihd.net/hphotos-ak-snc1/5650_98675293379_6628568379_2126292_547965_a.jpg\\\" alt=\\\"\\\" /><span class=\\\"caption\\\"></span></span>Facebook for iPhone 3.0 is coming very soon. I can&#039;t predict an exact date when I will submit to Apple, but I can say that I am about 98\\u0025 done. So what&#039;s new in this update?<br /><br />1. The &quot;new&quot; News Feed<br />2. Like<br />3. Events (including the ability to RSVP)<br />4. Notes<br />5. Pages<br />6. Create new photo albums<br />7. Upload photos to any album<br />8. Zoom into photos<br />9. Easier photo tagging<br />10. Profile Pictures albums<br />11. A new home screen for easy access to all your stuff, search, and notifications<br />12. Add your favorite profiles and pages to the home screen<br />13. Better Notifications (they link to the comments so you can reply)<br />14. Quickly call or text people right from the Friends page<br />15. Messages you are typing will be restored if you quit or are interrupted by a phone call<br /><br />The one feature everyone is asking for, Push Notifications, is in development but it won&#039;t make it into 3.0. You can expect it in a 3.1 update later this summer.<br /><br />When I have submitted the app to Apple I will let you all know!<br /><br />- Joe<br /></div>\",'+
		'  \"icon\": \"https://s-static.ak.facebook.com/rsrc.php/v1/yY/r/1gBp2bDGEuh.gif\",'+
		'  \"created_time\": \"2009-07-01T19:47:01+0000\",'+
		'  \"updated_time\": \"2009-07-01T20:32:34+0000\",'+
		'  \"comments\": {'+
		'    \"data\": ['+
		'      {'+
		'        \"id\": \"122788341354_2769232\",'+
		'        \"from\": {'+
		'          \"name\": \"Victor Piacente\",'+
		'          \"id\": \"526379119\"'+
		'        },'+
		'        \"message\": \"finally... it sucks right now.\",'+
		'        \"created_time\": \"2009-07-01T19:47:30+0000\"'+
		'      },'+
		'      {'+
		'        \"id\": \"122788341354_2769233\",'+
		'        \"from\": {'+
		'          \"name\": \"Luke Rigg\",'+
		'          \"id\": \"547121559\"'+
		'        },'+
		'        \"message\": \"nice\",'+
		'        \"created_time\": \"2009-07-01T19:47:30+0000\"'+
		'      }'+
		'    ],'+
		'    \"paging\": {'+
		'      \"next\": \"https://graph.facebook.com/122788341354/comments?method=GET&metadata=true&format=json&callback=___GraphExplorerAsyncCallback___&access_token=AAA&limit=25&offset=25&__after_id=122788341354_2769290\"'+
		'    }'+
		'  },'+
		'  \"type\": \"note\"'+
		'}';
		FacebookNote r = parse(json);
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.from_z != null);
		System.assert(r.subject != null);
		System.assert(r.message != null);
		System.assert(r.icon != null);
		System.assert(r.created_time != null);
		System.assert(r.updated_time != null);
		System.assert(r.comments != null);
		System.assert(r.type != null);

		FacebookUtil.testmode = true;
		FacebookUtil.teststubresponse = json;
		r = new FacebookNote('TEST', 'TEST');
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.from_z != null);
		System.assert(r.subject != null);
		System.assert(r.message != null);
		System.assert(r.icon != null);
		System.assert(r.created_time != null);
		System.assert(r.updated_time != null);
		System.assert(r.comments != null);
		System.assert(r.type != null);

		json = '{\"type\": \"test\" }';
		try {
			FacebookNote objRoot = new FacebookNote(System.JSON.createParser(json));
			System.assert(false);
		} catch (FacebookException fbe) {
			System.assertEquals(fbe.getMessage(), 'FacebookNote found object type test - expected note');
		}

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		FacebookNote objRoot = new FacebookNote(System.JSON.createParser(json));
		System.assert(objRoot != null);
		System.assert(objRoot.id == null);
		System.assert(objRoot.from_z == null);
		System.assert(objRoot.subject == null);
		System.assert(objRoot.message == null);
		System.assert(objRoot.icon == null);
		System.assert(objRoot.created_time == null);
		System.assert(objRoot.updated_time == null);
		System.assert(objRoot.comments == null);
		System.assert(objRoot.type == null);
	}
}