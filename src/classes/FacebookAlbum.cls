//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class FacebookAlbum {
	public static Set<String> types = new Set<String>{'profile', 'mobile', 'wall', 'normal', 'album', 'friends_walls'};
	
	public String id {get;set;}
	public FacebookRef from_z {get;set;}
	public String name {get;set;}
	public String description {get;set;}
	public String link {get;set;}
	public String cover_photo {get;set;}
	public Integer count {get;set;}
	public String type {get;set;}
	public String created_time {get;set;}
	public String updated_time {get;set;}
	public Boolean can_upload {get;set;}
	public Likes likes {get;set;}
	public FacebookComments comments {get;set;}

	public FacebookAlbum(JSONParser parser) {
		while (parser.nextToken() != JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != JSONToken.VALUE_NULL) {
					if (text == 'id') {
						id = parser.getText();
					} else if (text == 'from') {
						from_z = new FacebookRef(parser);
					} else if (text == 'name') {
						name = parser.getText();
					} else if (text == 'description') {
						description = parser.getText();
					} else if (text == 'link') {
						link = parser.getText();
					} else if (text == 'cover_photo') {
						cover_photo = parser.getText();
					} else if (text == 'count') {
						count = parser.getIntegerValue();
					} else if (text == 'type') {
						type = parser.getText();
						if (!types.contains(type)) {
							throw new FacebookException('FacebookUser found object type '+type+' - expected one of '+types);
						}
					} else if (text == 'created_time') {
						created_time = parser.getText();
					} else if (text == 'updated_time') {
						updated_time = parser.getText();
					} else if (text == 'can_upload') {
						can_upload = parser.getBooleanValue();
					} else if (text == 'likes') {
						likes = new Likes(parser);
					} else if (text == 'comments') {
						comments = new FacebookComments(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'Root consuming unrecognized property: '+text);
						FacebookUtil.consumeObject(parser);
					}
				}
			}
		}
	}
	
	public FacebookAlbum(String accessToken, String id, Map<String, String> params) {
		this(System.JSON.createParser(FacebookUtil.get(accessToken, id, params)));
	}
	
	public FacebookAlbum(String accessToken, String id) {
		this(accessToken, id, null);
	}
	
	public class Likes {
		public List<FacebookRef> data {get;set;}
		public FacebookPaging paging {get;set;}

		public Likes(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					parser.nextToken();
					if (text == 'data') {
						data = new List<FacebookRef>();
						while (parser.nextToken() != JSONToken.END_ARRAY) {
							data.add(new FacebookRef(parser));
						}
					} else if (text == 'paging') {
						paging = new FacebookPaging(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'Likes consuming unrecognized property: '+text);
						FacebookUtil.consumeObject(parser);
					}
				}
			}
		}
	}	
	
	
	public static FacebookAlbum parse(String json) {
		return new FacebookAlbum(System.JSON.createParser(json));
	}
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"id\": \"10150146071791729\",'+
		'  \"from\": {'+
		'    \"name\": \"Facebook\",'+
		'    \"category\": \"Product/service\",'+
		'    \"id\": \"20531316728\"'+
		'  },'+
		'  \"name\": \"Happy Lunar New Year 2011\",'+
		'  \"description\": \"An album\",'+
		'  \"link\": \"https://www.facebook.com/album.php?fbid=10150146071791729&id=20531316728&aid=324257\",'+
		'  \"cover_photo\": \"10150146072661729\",'+
		'  \"count\": 79,'+
		'  \"type\": \"album\",'+
		'  \"created_time\": \"2011-02-02T16:47:41+0000\",'+
		'  \"updated_time\": \"2011-02-02T17:00:50+0000\",'+
		'  \"can_upload\": false,'+
		'  \"likes\": {'+
		'    \"data\": ['+
		'      {'+
		'        \"id\": \"100003303674597\",'+
		'        \"name\": \"Pablo Zotelo\"'+
		'      },'+
		'      {'+
		'        \"id\": \"100001890375359\",'+
		'        \"name\": \"Eddy Ìrossonerri\"'+
		'      }'+
		'    ],'+
		'    \"paging\": {'+
		'      \"next\": \"https://graph.facebook.com/10150146071791729/likes?method=GET&metadata=true&format=json&callback=___GraphExplorerAsyncCallback___&access_token=AAA&limit=25&offset=25&__after_id=100000459053398\"'+
		'    }'+
		'  },'+
		'  \"comments\": {'+
		'    \"data\": ['+
		'      {'+
		'        \"id\": \"10150146071791729_15215173\",'+
		'        \"from\": {'+
		'          \"name\": \"Plànet Pôwéêrx\",'+
		'          \"id\": \"100000931807575\"'+
		'        },'+
		'        \"message\": \"it is very beautiful\",'+
		'        \"created_time\": \"2011-02-02T17:06:16+0000\",'+
		'        \"likes\": 2'+
		'      },'+
		'      {'+
		'        \"id\": \"10150146071791729_15215230\",'+
		'        \"from\": {'+
		'          \"name\": \"Sarah Boyle\",'+
		'          \"id\": \"1808712781\"'+
		'        },'+
		'        \"message\": \"niceee\",'+
		'        \"created_time\": \"2011-02-02T17:16:15+0000\",'+
		'        \"likes\": 1'+
		'      }'+
		'    ],'+
		'    \"paging\": {'+
		'      \"next\": \"https://graph.facebook.com/10150146071791729/comments?method=GET&metadata=true&format=json&callback=___GraphExplorerAsyncCallback___&access_token=AAA&limit=25&offset=25&__after_id=10150146071791729_15215310\"'+
		'    }'+
		'  }'+
		'}';
		FacebookAlbum r = parse(json);
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.from_z != null);
		System.assert(r.name != null);
		System.assert(r.link != null);
		System.assert(r.cover_photo != null);
		System.assert(r.count != null);
		System.assert(r.type != null);
		System.assert(r.created_time != null);
		System.assert(r.updated_time != null);
		System.assert(r.can_upload != null);
		System.assert(r.likes != null);
		System.assert(r.comments != null);

		FacebookUtil.testmode = true;
		FacebookUtil.teststubresponse = json;
		r = new FacebookAlbum('TEST', 'TEST');
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.from_z != null);
		System.assert(r.name != null);
		System.assert(r.link != null);
		System.assert(r.cover_photo != null);
		System.assert(r.count != null);
		System.assert(r.type != null);
		System.assert(r.created_time != null);
		System.assert(r.updated_time != null);
		System.assert(r.can_upload != null);
		System.assert(r.likes != null);
		System.assert(r.comments != null);

		json = '{\"type\": \"test\" }';
		try {
			FacebookAlbum objRoot = new FacebookAlbum(System.JSON.createParser(json));
			System.assert(false);
		} catch (FacebookException fbe) {
			System.assertEquals(fbe.getMessage(), 'FacebookUser found object type test - expected one of '+types);
		}

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		FacebookAlbum objRoot = new FacebookAlbum(System.JSON.createParser(json));
		System.assert(objRoot != null);
		System.assert(objRoot.id == null);
		System.assert(objRoot.from_z == null);
		System.assert(objRoot.name == null);
		System.assert(objRoot.link == null);
		System.assert(objRoot.cover_photo == null);
		System.assert(objRoot.count == null);
		System.assert(objRoot.type == null);
		System.assert(objRoot.created_time == null);
		System.assert(objRoot.updated_time == null);
		System.assert(objRoot.can_upload == null);
		System.assert(objRoot.likes == null);
		System.assert(objRoot.comments == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		Likes objLikes = new Likes(System.JSON.createParser(json));
		System.assert(objLikes != null);
		System.assert(objLikes.data == null);
		System.assert(objLikes.paging == null);
	}
}