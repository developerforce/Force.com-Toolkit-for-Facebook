//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class FacebookThreads {
	public class Summary {
		public Integer unseen_count {get;set;}
		public Integer unread_count {get;set;}
		public String updated_time {get;set;}

		public Summary(JSONParser parser) {
			while (parser.nextToken() != JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != JSONToken.VALUE_NULL) {
						if (text == 'unseen_count') {
							unseen_count = parser.getIntegerValue();
						} else if (text == 'unread_count') {
							unread_count = parser.getIntegerValue();
						} else if (text == 'updated_time') {
							updated_time = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Summary consuming unrecognized property: '+text);
							FacebookUtil.consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public List<FacebookThread> data {get;set;}
	public Summary summary {get;set;}

	public FacebookThreads(JSONParser parser) {
		while (parser.nextToken() != JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != JSONToken.VALUE_NULL) {
					if (text == 'data') {
						data = new List<FacebookThread>();
						while (parser.nextToken() != JSONToken.END_ARRAY) {
							data.add(new FacebookThread(parser));
						}
					} else if (text == 'summary') {
						summary = new Summary(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'Root consuming unrecognized property: '+text);
						FacebookUtil.consumeObject(parser);
					}
				}
			}
		}
	}
	
	public FacebookThreads(String accessToken, String id, Map<String, String> params) {
		this(System.JSON.createParser(FacebookUtil.get(accessToken, id, params)));
	}
	
	public FacebookThreads(String accessToken, String id) {
		this(accessToken, id, null);
	}
		
	public static FacebookThreads parse(String json) {
		return new FacebookThreads(System.JSON.createParser(json));
	}
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"data\": ['+
		'    {'+
		'      \"id\": \"253427978039731\", '+
		'      \"to\": {'+
		'        \"data\": ['+
		'          {'+
		'            \"name\": \"Pat Patterson\", '+
		'            \"id\": \"667905711\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"A User\", '+
		'            \"id\": \"123123123\"'+
		'          }'+
		'        ]'+
		'      }, '+
		'      \"updated_time\": \"2012-09-01T13:42:46+0000\", '+
		'      \"unread\": 0, '+
		'      \"unseen\": 0, '+
		'      \"comments\": {'+
		'        \"data\": ['+
		'          {'+
		'            \"id\": \"253427978039731_254\", '+
		'            \"from\": {'+
		'              \"name\": \"Pat Patterson\", '+
		'              \"id\": \"667905711\"'+
		'            }, '+
		'            \"message\": \"A message\", '+
		'            \"created_time\": \"2012-05-01T17:43:39+0000\"'+
		'          }, '+
		'          {'+
		'            \"id\": \"253427978039731_255\", '+
		'            \"from\": {'+
		'              \"name\": \"Pat Patterson\", '+
		'              \"id\": \"667905711\"'+
		'            }, '+
		'            \"message\": \"Another message\", '+
		'            \"created_time\": \"2012-05-01T17:43:44+0000\"'+
		'          }'+
		'        ], '+
		'        \"paging\": {'+
		'          \"previous\": \"https://graph.facebook.com/253427978039731/comments?limit=25&since=1346506966\", '+
		'          \"next\": \"https://graph.facebook.com/253427978039731/comments?limit=25&until=1346506966\"'+
		'        }'+
		'      }, '+
		'      \"metadata\": {'+
		'        \"connections\": {'+
		'          \"comments\": \"https://graph.facebook.com/253427978039731/comments?access_token=FJHFUIFTUWEDTUOWEFULWEWFEOWFEYUOFEYUWFEU\"'+
		'        }, '+
		'        \"fields\": ['+
		'          {'+
		'            \"name\": \"id\", '+
		'            \"description\": \"The unique ID for this message thread. `read_mailbox`. `string`.\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"snippet\", '+
		'            \"description\": \"Fragment of the thread for use in thread lists. `read_mailbox`. `string`.\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"updated_time\", '+
		'            \"description\": \"Timestamp of when the thread was last updated. `read_mailbox`. `string` containing ISO-8601 date-time\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"message_count\", '+
		'            \"description\": \"Number of messages in the thread. `read_mailbox`. `integer`.\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"unread_count\", '+
		'            \"description\": \"Number of unread messages in the thread. `read_mailbox`. `integer`.\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"tags\", '+
		'            \"description\": \"Thread tags. `read_mailbox`. `array` of objects containing `name`\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"participants\", '+
		'            \"description\": \"List of the thread participants. `read_mailbox`. `array` of objects each containing `name`, `email`, and Facebook `id` (if available).\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"former_participants\", '+
		'            \"description\": \"List of former thread participants who have unsubscribed from the thread. `read_mailbox`. `array` of objects each containing `name`, `email`, and Facebook `id` (if available).\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"senders\", '+
		'            \"description\": \"List of participants who have sent a message in the thread. `read_mailbox`. `array` of objects each containing `name`, `email`, and Facebook `id` (if available).\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"messages\", '+
		'            \"description\": \"List of the message objects contained in this thread. `read_mailbox`. `array` of `message` objects.\"'+
		'          }'+
		'        ], '+
		'        \"type\": \"thread\"'+
		'      }'+
		'    }, '+
		'    {'+
		'      \"id\": \"339454196148749\", '+
		'      \"to\": {'+
		'        \"data\": ['+
		'          {'+
		'            \"name\": \"Another User\", '+
		'            \"id\": \"234234234\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"Pat Patterson\", '+
		'            \"id\": \"667905711\"'+
		'          }'+
		'        ]'+
		'      }, '+
		'      \"updated_time\": \"2012-08-31T17:12:48+0000\", '+
		'      \"unread\": 0, '+
		'      \"unseen\": 0, '+
		'      \"comments\": {'+
		'        \"data\": ['+
		'          {'+
		'            \"id\": \"339454196148749_3\", '+
		'            \"from\": {'+
		'              \"name\": \"Pat Patterson\", '+
		'              \"id\": \"667905711\"'+
		'            }, '+
		'            \"message\": \"Yet another message\", '+
		'            \"created_time\": \"2012-08-31T16:54:44+0000\"'+
		'          }, '+
		'          {'+
		'            \"id\": \"339454196148749_4\", '+
		'            \"from\": {'+
		'              \"name\": \"Another User\", '+
		'              \"id\": \"234234234\"'+
		'            }, '+
		'            \"message\": \"A reply\", '+
		'            \"created_time\": \"2012-08-31T16:55:33+0000\"'+
		'          }'+
		'        ], '+
		'        \"paging\": {'+
		'          \"previous\": \"https://graph.facebook.com/339454196148749/comments?limit=25&since=1346433168\", '+
		'          \"next\": \"https://graph.facebook.com/339454196148749/comments?limit=25&until=1346433168\"'+
		'        }'+
		'      }, '+
		'      \"metadata\": {'+
		'        \"connections\": {'+
		'          \"comments\": \"https://graph.facebook.com/339454196148749/comments?access_token=FJHFUIFTUWEDTUOWEFULWEWFEOWFEYUOFEYUWFEU\"'+
		'        }, '+
		'        \"fields\": ['+
		'          {'+
		'            \"name\": \"id\", '+
		'            \"description\": \"The unique ID for this message thread. `read_mailbox`. `string`.\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"snippet\", '+
		'            \"description\": \"Fragment of the thread for use in thread lists. `read_mailbox`. `string`.\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"updated_time\", '+
		'            \"description\": \"Timestamp of when the thread was last updated. `read_mailbox`. `string` containing ISO-8601 date-time\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"message_count\", '+
		'            \"description\": \"Number of messages in the thread. `read_mailbox`. `integer`.\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"unread_count\", '+
		'            \"description\": \"Number of unread messages in the thread. `read_mailbox`. `integer`.\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"tags\", '+
		'            \"description\": \"Thread tags. `read_mailbox`. `array` of objects containing `name`\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"participants\", '+
		'            \"description\": \"List of the thread participants. `read_mailbox`. `array` of objects each containing `name`, `email`, and Facebook `id` (if available).\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"former_participants\", '+
		'            \"description\": \"List of former thread participants who have unsubscribed from the thread. `read_mailbox`. `array` of objects each containing `name`, `email`, and Facebook `id` (if available).\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"senders\", '+
		'            \"description\": \"List of participants who have sent a message in the thread. `read_mailbox`. `array` of objects each containing `name`, `email`, and Facebook `id` (if available).\"'+
		'          }, '+
		'          {'+
		'            \"name\": \"messages\", '+
		'            \"description\": \"List of the message objects contained in this thread. `read_mailbox`. `array` of `message` objects.\"'+
		'          }'+
		'        ], '+
		'        \"type\": \"thread\"'+
		'      }'+
		'    }'+
		'  ], '+
		'  \"summary\": {'+
		'    \"unseen_count\": 0, '+
		'    \"unread_count\": 0, '+
		'    \"updated_time\": \"2012-09-01T13:42:46+0000\"'+
		'  }'+
		'}';
		FacebookThreads r = parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		Summary objSummary = new Summary(System.JSON.createParser(json));
		System.assert(objSummary != null);
		System.assert(objSummary.unseen_count == null);
		System.assert(objSummary.unread_count == null);
		System.assert(objSummary.updated_time == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		FacebookThreads objRoot = new FacebookThreads(System.JSON.createParser(json));
		System.assert(objRoot != null);
		System.assert(objRoot.data == null);
		System.assert(objRoot.summary == null);
	}
}