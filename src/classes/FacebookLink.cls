//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class FacebookLink {
	public String id {get;set;}
	public FacebookRef from_z {get;set;}
	public String message {get;set;}
	public String picture {get;set;}
	public String link {get;set;}
	public String name {get;set;}
	public String description {get;set;}
	public String icon {get;set;}
	public String created_time {get;set;}
	public FacebookComments comments {get;set;}
	public String type {get;set;}

	public FacebookLink(JSONParser parser) {
		while (parser.nextToken() != JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != JSONToken.VALUE_NULL) {
					if (text == 'id') {
						id = parser.getText();
					} else if (text == 'from') {
						from_z = new FacebookRef(parser);
					} else if (text == 'message') {
						message = parser.getText();
					} else if (text == 'picture') {
						picture = parser.getText();
					} else if (text == 'link') {
						link = parser.getText();
					} else if (text == 'name') {
						name = parser.getText();
					} else if (text == 'description') {
						description = parser.getText();
					} else if (text == 'icon') {
						icon = parser.getText();
					} else if (text == 'created_time') {
						created_time = parser.getText();
					} else if (text == 'comments') {
						comments = new FacebookComments(parser);
					} else if (text == 'type') {
						type = parser.getText();
						if (!type.equals('link')) {
							throw new FacebookException('FacebookLink found object type '+type+' - expected link');
						}
					} else {
						System.debug(LoggingLevel.WARN, 'FacebookLink consuming unrecognized property: '+text);
						FacebookUtil.consumeObject(parser);
					}
				}
			}
		}
	}
	
	public FacebookLink(String accessToken, String id, Map<String, String> params) {
		this(System.JSON.createParser(FacebookUtil.get(accessToken, id, params)));
	}
	
	public FacebookLink(String accessToken, String id) {
		this(accessToken, id, null);
	}
	
	public static FacebookLink parse(String json) {
		return new FacebookLink(System.JSON.createParser(json));
	}
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"id\": \"114961875194024\",'+
		'  \"from\": {'+
		'    \"name\": \"Arjun Banker\",'+
		'    \"id\": \"7901103\"'+
		'  },'+
		'  \"message\": \"Good luck, Rishin Banker. Talk to Atish Mehta if you need help growing a mustache.\",'+
		'  \"picture\": \"https://s-external.ak.fbcdn.net/safe_image.php?d=AQDP8qAUPBhJF5Qz&w=130&h=130&url=http\\u00253A\\u00252F\\u00252Fi.ytimg.com\\u00252Fvi\\u00252FJA068qeB0oM\\u00252F2.jpg\",'+
		'  \"link\": \"http://www.youtube.com/watch?v=JA068qeB0oM\",'+
		'  \"name\": \"The Next CEO Competition 2010\",'+
		'  \"description\": \"10 Penn State Undergraduate Students will vie for the title of The Next CEO on April 22nd, 2010. Through use of concepts put forth by the CSIS (The Seven Revolutions), the contestants will act as CEO\'s of ten major companies and comment on past events as well as make decisions for the future. ...\",'+
		'  \"icon\": \"https://s-static.ak.facebook.com/rsrc.php/v1/yD/r/aS8ecmYRys0.gif\",'+
		'  \"created_time\": \"2010-04-20T23:49:19+0000\",'+
		'  \"comments\": {'+
		'    \"data\": ['+
		'      {'+
		'        \"id\": \"114961875194024_337654\",'+
		'        \"from\": {'+
		'          \"name\": \"Atish Mehta\",'+
		'          \"id\": \"3404106\"'+
		'        },'+
		'        \"message\": \"People listen to a man with a commanding moustache. I highly recommend it, if you want to lay the framework for America. Especially for a lad with your boyish good looks.\",'+
		'        \"created_time\": \"2010-04-21T00:02:01+0000\"'+
		'      },'+
		'      {'+
		'        \"id\": \"114961875194024_338692\",'+
		'        \"from\": {'+
		'          \"name\": \"Nina Mehta\",'+
		'          \"id\": \"6801488\"'+
		'        },'+
		'        \"message\": \"Nice ou in the moustache.\",'+
		'        \"created_time\": \"2010-04-21T02:30:28+0000\"'+
		'      },'+
		'      {'+
		'        \"id\": \"114961875194024_341335\",'+
		'        \"from\": {'+
		'          \"name\": \"Amita Jhaveri\",'+
		'          \"id\": \"800942767\"'+
		'        },'+
		'        \"message\": \"Good Luck..!!\",'+
		'        \"created_time\": \"2010-04-21T11:36:30+0000\"'+
		'      }'+
		'    ],'+
		'    \"paging\": {'+
		'      \"next\": \"https://graph.facebook.com/114961875194024/comments?method=GET&metadata=true&format=json&callback=___GraphExplorerAsyncCallback___&access_token=AAA&limit=25&offset=25&__after_id=114961875194024_341335\"'+
		'    }'+
		'  },'+
		'  \"type\": \"link\"'+
		'}';
		FacebookLink r = parse(json);
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.from_z != null);
		System.assert(r.message != null);
		System.assert(r.picture != null);
		System.assert(r.link != null);
		System.assert(r.name != null);
		System.assert(r.description != null);
		System.assert(r.icon != null);
		System.assert(r.created_time != null);
		System.assert(r.comments != null);
		System.assert(r.type != null);

		FacebookUtil.testmode = true;
		FacebookUtil.teststubresponse = json;
		r = new FacebookLink('TEST', 'TEST');
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.from_z != null);
		System.assert(r.message != null);
		System.assert(r.picture != null);
		System.assert(r.link != null);
		System.assert(r.name != null);
		System.assert(r.description != null);
		System.assert(r.icon != null);
		System.assert(r.created_time != null);
		System.assert(r.comments != null);
		System.assert(r.type != null);

		json = '{\"type\": \"test\" }';
		try {
			FacebookLink objRoot = new FacebookLink(System.JSON.createParser(json));
			System.assert(false);
		} catch (FacebookException fbe) {
			System.assertEquals(fbe.getMessage(), 'FacebookLink found object type test - expected link');
		}

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		FacebookLink objRoot = new FacebookLink(System.JSON.createParser(json));
		System.assert(objRoot != null);
		System.assert(objRoot.id == null);
		System.assert(objRoot.from_z == null);
		System.assert(objRoot.message == null);
		System.assert(objRoot.picture == null);
		System.assert(objRoot.link == null);
		System.assert(objRoot.name == null);
		System.assert(objRoot.description == null);
		System.assert(objRoot.icon == null);
		System.assert(objRoot.created_time == null);
		System.assert(objRoot.comments == null);
		System.assert(objRoot.type == null);
	}
}