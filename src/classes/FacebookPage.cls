//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class FacebookPage {
	public String id {get;set;}
	public String name {get;set;}
	public String picture {get;set;}
	public String link {get;set;}
	public Integer likes {get;set;}
	// public Dictionary location {get;set;} - TODO
	public String phone {get;set;}
	public Integer checkins {get;set;}
	public String category {get;set;}
	public String website {get;set;}
	public String username {get;set;}
	public String founded {get;set;}
	public String company_overview {get;set;}
	public String mission {get;set;}
	public String about {get;set;}
	public Integer talking_about_count {get;set;}
	public String access_token {get;set;}
	public String type {get;set;}

	public FacebookPage(JSONParser parser) {
		while (parser.nextToken() != JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != JSONToken.VALUE_NULL) {
					if (text == 'id') {
						id = parser.getText();
					} else if (text == 'name') {
						name = parser.getText();
					} else if (text == 'picture') {
						picture = parser.getText();
					} else if (text == 'link') {
						link = parser.getText();
					} else if (text == 'likes') {
						likes = parser.getIntegerValue();
					} else if (text == 'phone') {
						phone = parser.getText();
					} else if (text == 'checkins') {
						checkins = parser.getIntegerValue();
					} else if (text == 'category') {
						category = parser.getText();
					} else if (text == 'website') {
						website = parser.getText();
					} else if (text == 'username') {
						username = parser.getText();
					} else if (text == 'founded') {
						founded = parser.getText();
					} else if (text == 'company_overview') {
						company_overview = parser.getText();
					} else if (text == 'mission') {
						mission = parser.getText();
					} else if (text == 'about') {
						about = parser.getText();
					} else if (text == 'talking_about_count') {
						talking_about_count = parser.getIntegerValue();
					} else if (text == 'access_token') {
						access_token = parser.getText();
					} else if (text == 'type') {
						type = parser.getText();
						if (!type.equals('page')) {
							throw new FacebookException('FacebookPage found object type '+type+' - expected page');
						}
					} else {
						System.debug(LoggingLevel.WARN, 'FacebookPage consuming unrecognized property: '+text);
						FacebookUtil.consumeObject(parser);
					}
				}
			}
		}
	}
	
	public FacebookPage(String accessToken, String id, Map<String, String> params) {
		this(System.JSON.createParser(FacebookUtil.get(accessToken, id, params)));
	}
	
	public FacebookPage(String accessToken, String id) {
		this(accessToken, id, null);
	}
	
	public static FacebookPage parse(String json) {
		return new FacebookPage(System.JSON.createParser(json));
	}
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"id\": \"19292868552\",'+
		'  \"name\": \"Facebook Platform\",'+
		'  \"picture\": \"https://fbcdn-profile-a.akamaihd.net/hprofile-ak-ash2/276791_19292868552_1958181823_s.jpg\",'+
		'  \"link\": \"https://www.facebook.com/platform\",'+
		'  \"likes\": 3873705,'+
		'  \"phone\": \"111-111-1111\",'+
		'  \"checkins\": 1234,'+
		'  \"category\": \"Product/service\",'+
		'  \"website\": \"http://developers.facebook.com\",'+
		'  \"username\": \"platform\",'+
		'  \"founded\": \"2007\",'+
		'  \"company_overview\": \"Facebook Platform enables anyone to build social apps on Facebook and the web.\",'+
		'  \"mission\": \"To make the web more open and social.\",'+
		'  \"about\": \"We\'re building the social web. Get the latest here: developers.facebook.com \",'+
		'  \"talking_about_count\": 69530,'+
		'  \"access_token\": \"ABCDEFGH\",'+
		'  \"type\": \"page\"'+
		'}';
		FacebookPage r = parse(json);
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.name != null);
		System.assert(r.picture != null);
		System.assert(r.link != null);
		System.assert(r.likes != null);
		System.assert(r.phone != null);
		System.assert(r.checkins != null);
		System.assert(r.category != null);
		System.assert(r.website != null);
		System.assert(r.username != null);
		System.assert(r.founded != null);
		System.assert(r.company_overview != null);
		System.assert(r.mission != null);
		System.assert(r.about != null);
		System.assert(r.talking_about_count != null);
		System.assert(r.access_token != null);
		System.assert(r.type != null);

		FacebookUtil.testmode = true;
		FacebookUtil.teststubresponse = json;
		r = new FacebookPage('TEST', 'TEST');
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.name != null);
		System.assert(r.picture != null);
		System.assert(r.link != null);
		System.assert(r.likes != null);
		System.assert(r.phone != null);
		System.assert(r.checkins != null);
		System.assert(r.category != null);
		System.assert(r.website != null);
		System.assert(r.username != null);
		System.assert(r.founded != null);
		System.assert(r.company_overview != null);
		System.assert(r.mission != null);
		System.assert(r.about != null);
		System.assert(r.talking_about_count != null);
		System.assert(r.access_token != null);
		System.assert(r.type != null);

		json = '{\"type\": \"test\" }';
		try {
			FacebookPage objRoot = new FacebookPage(System.JSON.createParser(json));
			System.assert(false);
		} catch (FacebookException fbe) {
			System.assertEquals(fbe.getMessage(), 'FacebookPage found object type test - expected page');
		}

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		FacebookPage objRoot = new FacebookPage(System.JSON.createParser(json));
		System.assert(objRoot != null);
		System.assert(objRoot.id == null);
		System.assert(objRoot.name == null);
		System.assert(objRoot.picture == null);
		System.assert(objRoot.link == null);
		System.assert(objRoot.likes == null);
		System.assert(objRoot.phone == null);
		System.assert(objRoot.checkins == null);
		System.assert(objRoot.category == null);
		System.assert(objRoot.website == null);
		System.assert(objRoot.username == null);
		System.assert(objRoot.founded == null);
		System.assert(objRoot.company_overview == null);
		System.assert(objRoot.mission == null);
		System.assert(objRoot.about == null);
		System.assert(objRoot.talking_about_count == null);
		System.assert(objRoot.access_token == null);
		System.assert(objRoot.type == null);
	}
}