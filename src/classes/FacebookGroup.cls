//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class FacebookGroup {
	public String id {get;set;}
	public Integer version {get;set;}
	public FacebookRef owner {get;set;}
	public String name {get;set;}
	public String description {get;set;}
	public String link {get;set;}
	public String privacy {get;set;}
	public String icon {get;set;}
	public String updated_time {get;set;}
	public String email {get;set;}
	public String type {get;set;}
	public Integer bookmark_order {get;set;}
	public Integer unread {get;set;}
	public Boolean administrator {get;set;}

	public FacebookGroup(JSONParser parser) {
		while (parser.nextToken() != JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != JSONToken.VALUE_NULL) {
					if (text == 'id') {
						id = parser.getText();
					} else if (text == 'version') {
						version = parser.getIntegerValue();
					} else if (text == 'owner') {
						owner = new FacebookRef(parser);
					} else if (text == 'name') {
						name = parser.getText();
					} else if (text == 'description') {
						description = parser.getText();
					} else if (text == 'link') {
						link = parser.getText();
					} else if (text == 'privacy') {
						privacy = parser.getText();
					} else if (text == 'icon') {
						icon = parser.getText();
					} else if (text == 'updated_time') {
						updated_time = parser.getText();
					} else if (text == 'email') {
						email = parser.getText();
					} else if (text == 'type') {
						type = parser.getText();
						if (!type.equals('group')) {
							throw new FacebookException('FacebookGroup found object type '+type+' - expected group');
						}
					} else if (text == 'bookmark_order') {
						bookmark_order = parser.getIntegerValue();
					} else if (text == 'unread') {
						unread = parser.getIntegerValue();
					} else if (text == 'administrator') {
						administrator = parser.getBooleanValue();
					} else {
						System.debug(LoggingLevel.WARN, 'Root consuming unrecognized property: '+text);
						FacebookUtil.consumeObject(parser);
					}
				}
			}
		}
	}
	
	public FacebookGroup(String accessToken, String id, Map<String, String> params) {
		this(System.JSON.createParser(FacebookUtil.get(accessToken, id, params)));
	}
	
	public FacebookGroup(String accessToken, String id) {
		this(accessToken, id, null);
	}
	
	public static FacebookGroup parse(String json) {
		return new FacebookGroup(System.JSON.createParser(json));
	}
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{'+
		'  \"id\": \"195466193802264\",'+
		'  \"version\": 1,'+
		'  \"owner\": {'+
		'    \"name\": \"Ravi Grover\",'+
		'    \"id\": \"202875\"'+
		'  },'+
		'  \"name\": \"Facebook Developers\",'+
		'  \"description\": \"Description.\",'+
		'  \"link\": \"https://developers.facebook.com/\",'+
		'  \"privacy\": \"OPEN\",'+
		'  \"icon\": \"https://s-static.ak.facebook.com/rsrc.php/v1/yI/r/0pjqWL1NfkE.png\",'+
		'  \"updated_time\": \"2011-03-12T02:43:05+0000\",'+
		'  \"email\": \"195466193802264@groups.facebook.com\",'+
		'  \"unread\": 16,'+
		'  \"bookmark_order\": 9,'+
		'  \"administrator\": true,'+
		'  \"type\": \"group\"'+
		'}';
		FacebookGroup r = parse(json);
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.version != null);
		System.assert(r.owner != null);
		System.assert(r.name != null);
		System.assert(r.description != null);
		System.assert(r.link != null);
		System.assert(r.privacy != null);
		System.assert(r.icon != null);
		System.assert(r.updated_time != null);
		System.assert(r.email != null);
		System.assert(r.type != null);
		System.assert(r.bookmark_order != null);
		System.assert(r.unread != null);
		System.assert(r.administrator != null);

		FacebookUtil.testmode = true;
		FacebookUtil.teststubresponse = json;
		r = new FacebookGroup('TEST', 'TEST');
		System.assert(r != null);
		System.assert(r.id != null);
		System.assert(r.version != null);
		System.assert(r.owner != null);
		System.assert(r.name != null);
		System.assert(r.description != null);
		System.assert(r.link != null);
		System.assert(r.privacy != null);
		System.assert(r.icon != null);
		System.assert(r.updated_time != null);
		System.assert(r.email != null);
		System.assert(r.type != null);
		System.assert(r.bookmark_order != null);
		System.assert(r.unread != null);
		System.assert(r.administrator != null);

		json = '{\"type\": \"test\" }';
		try {
			FacebookGroup objRoot = new FacebookGroup(System.JSON.createParser(json));
			System.assert(false);
		} catch (FacebookException fbe) {
			System.assertEquals(fbe.getMessage(), 'FacebookGroup found object type test - expected group');
		}

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		FacebookGroup objRoot = new FacebookGroup(System.JSON.createParser(json));
		System.assert(objRoot != null);
		System.assert(objRoot.id == null);
		System.assert(objRoot.version == null);
		System.assert(objRoot.owner == null);
		System.assert(objRoot.name == null);
		System.assert(objRoot.description == null);
		System.assert(objRoot.link == null);
		System.assert(objRoot.privacy == null);
		System.assert(objRoot.icon == null);
		System.assert(objRoot.updated_time == null);
		System.assert(objRoot.email == null);
		System.assert(objRoot.type == null);
		System.assert(objRoot.bookmark_order == null);
		System.assert(objRoot.unread == null);
		System.assert(objRoot.administrator == null);
	}
}